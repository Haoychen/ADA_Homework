# This is assignment 1
data("ChickWeight")
# a) EDA for variable weight
weight <- ChickWeight$weight
# Bootstrap
library(bootstrap)
bias.bootstrap <- function(data, func){
estimator.sample <- func(data)
estimator.bootstrap <- bootstrap(data, nboot = 100, theta = func)$thetastar
return(mean(estimator.bootstrap - estimator.sample))
}
bias.bootstrap(weight, sd)
bias.bootstrap(weight, median)
setwd("~/Project/ADA_Homework/Assignment 2")
data("chickwts")
View(chickwts)
View(chickwts)
summary(chickwts)
soybean <- chickwts[chickwts$feed == 'soybean']$weight
soybean <- chickwts[chickwts$feed == 'soybean']['weight']
soybean <- chickwts[chickwts$feed == 'soybean']
chickwts$feed == 'soybean'
soybean <- chickwts[chickwts$feed == 'soybean']
soybean <- chickwts[chickwts$feed == 'soybean',]
View(soybean)
soybean <- chickwts[chickwts$feed == 'soybean',]['weight']
View(soybean)
casein <- chickwts[[chickwts$feed == 'casei']]
casein <- chickwts[chickwts$feed == 'casei',]['weight']
t.test(soybean, casein, var.equal = TRUE)
t.test(soybean$weight, casein$weight, var.equal = TRUE)
casein <- chickwts[chickwts$feed == 'casein',]['weight']
t.test(soybean, casein, var.equal = TRUE)
wilcox.test(soybean, casein)
wilcox.test(soybean$weight, casein$weight)
soybean <- chickwts[chickwts$feed == 'soybean',][['weight']]
casein <- chickwts[chickwts$feed == 'casein',][['weight']]
# parametric procedure
t.test(soybean, casein, var.equal = TRUE)
# Non-parametric procedure
wilcox.test(soybean, casein)
c(1, 2, 3) > 2
sum(c(1, 2, 3) > 2)
# re-sampling procedure
bootstrap.test <- function(x, y, B){
x.mean <- mean(x)
y.mean <- mean(y)
x.var <- var(x)
y.var <- var(y)
n <- length(x)
m <- length(y)
z.obs <- (x.mean - y.mean) / sqrt(x.var / n + y.var / m)
y <- y + x.mean - y.mean
z <- c()
for(i in 1:B){
x.star <- sample(x, n, replace = TRUE)
y.star <- sample(y, m, replace = TRUE)
x.star.mean <- mean(x.star)
y.star.mean <- mean(y.star)
x.star.var <- var(x.star)
y.star.var <- var(y.star)
z[i] <- abs((x.star.mean - y.star.mean) / sqrt(x.star.var / n + y.star.var / m))
}
return(sum(z > z.obs) / B)
}
bootstrap.test(soybean, casein, 50)
bootstrap.test(soybean, casein, 10)
bootstrap.test <- function(x, y, B){
x.mean <- mean(x)
y.mean <- mean(y)
x.var <- var(x)
y.var <- var(y)
n <- length(x)
m <- length(y)
z.obs <- (x.mean - y.mean) / sqrt(x.var / n + y.var / m)
y <- y + x.mean - y.mean
z <- c()
for(i in 1:B){
x.star <- sample(x, n, replace = TRUE)
y.star <- sample(y, m, replace = TRUE)
x.star.mean <- mean(x.star)
y.star.mean <- mean(y.star)
x.star.var <- var(x.star)
y.star.var <- var(y.star)
z[i] <- abs((x.star.mean - y.star.mean) / sqrt(x.star.var / n + y.star.var / m))
}
print(z.obs)
print(z)
return(sum(z > z.obs) / B)
}
bootstrap.test(soybean, casein, 10)
bootstrap.test(soybean, casein, 10)
bootstrap.test(soybean, casein, 10)
bootstrap.test(soybean, casein, 10)
bootstrap.test(soybean, casein, 10)
bootstrap.test(soybean, casein, 10)
